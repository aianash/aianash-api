application.baseUrl="aianash.com"

service.id = 1
datacenter.id = 1

# max-age is in seconds
cookie.aianid.max-age = 315360000
cookie.sessionid.max-age = 180

play.crypto.secret="OB=^G3Mom6ba3dLQcF<n[Ojly^DjeyjmWU0:@1q_FtI@4zAmeDVEH=i^eEUX^a__"

play.akka.actor-system = "aianonymous"
play.http.context = "/api/"

play.modules.enabled += "actors.analytics.AnalyticsModule"
play.modules.enabled += "actors.customer.CustomerModule"
play.modules.enabled += "actors.user.UserModule"

# to allow cross origin requests
play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = null
  allowedHttpMethods = ["GET", "POST", "OPTIONS"]
  allowedHttpHeaders = ["Accept"]
  preflightMaxAge = 1 hour
}

mailchimp {
  api-key = "9f7afc80d4ca45b0df9db8d027bfd08b-us14"
  list-id = "4c17451340"
}

webpage.default-name = "webpage"

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    deployment {
      /customer-configurator/customer-service {
        router = round-robin-group
        routees.paths = ["/user/customer-service"]
        cluster {
          enabled = on
          use-role = "customer-service"
          allow-local-routees = off
        }
      }

      /notification-service/customer-service {
        router = round-robin-group
        routees.paths = ["/user/customer-service"]
        cluster {
          enabled = on
          use-role = "customer-service"
          allow-local-routees = off
        }
      }

      /notification-service/event-service {
        router = round-robin-group
        routees.paths = ["/user/event-service"]
        cluster {
          enabled = on
          use-role = "event-service"
          allow-local-routees = off
        }
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "localhost"
      port = ${?NASH_PORT}
    }
  }

  # seed nodes should be provided from command line
  # so as to connect to akka cluster
  cluster {
    seed-nodes = []
    auto-down-unreachable-after = 10s
  }
}
